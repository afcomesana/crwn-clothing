{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport userActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  yield console.log('sign up saga'); // const { user } = await auth.createUserWithEmailAndPassword(email, password);\n  // await createUserProfileDocument(user, {displayName});\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(userActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  console.log(\"SIGN UP\");\n  yield takeLatest(userActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["C:/Users/adver/Desktop/curso_react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutSuccess","signOutFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","console","log","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\r\nimport userActionTypes from './user.types';\r\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\r\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure } from './user.actions';\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(signInSuccess({\r\n            id: userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }));\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    } catch(error) {\r\n        put(signInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth);\r\n    } catch (error) {\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signOut() {\r\n    try {\r\n        yield auth.signOut();\r\n        yield put(signOutSuccess());\r\n    } catch (error) {\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signUp({ payload: { displayName, email, password }}) {\r\n    yield console.log('sign up saga');\r\n    // const { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n    // await createUserProfileDocument(user, {displayName});\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(userActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(userActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(userActionTypes.SIGN_OUT_START, signOut)\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    console.log(\"SIGN UP\");\r\n    yield takeLatest(userActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart), \r\n        call(onEmailSignInStart), \r\n        call(onCheckUserSession),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart)\r\n    ]);\r\n}"]},"metadata":{},"sourceType":"module"}