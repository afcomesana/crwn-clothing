{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adver\\\\Desktop\\\\curso_react\\\\crwn-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { connect } from 'react-redux';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsuscribeFromSnapchot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      convertCollectionsSnapshotToMap(snapshot);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionsOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updatecollections(collectionsMap))\n});\n\nexport default ShopPage;","map":{"version":3,"sources":["C:/Users/adver/Desktop/curso_react/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionPage","CollectionsOverview","updateCollections","connect","firestore","convertCollectionsSnapshotToMap","ShopPage","Component","unsuscribeFromSnapchot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","render","match","props","path","mapDispatchToProps","dispatch","collectionsMap","updatecollections"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;;AAEA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,sBADmC,GACV,IADU;AAAA;;AAGnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvCR,MAAAA,+BAA+B,CAACQ,QAAD,CAA/B;AACH,KAFD;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAEhB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEc,KAAK,CAACE,IAAK,gBAA3B;AAA4C,QAAA,SAAS,EAAEjB;AAAvD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAKH;;AAjBkC;;AAqBvC,MAAMkB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,iBAAiB,EAAEkB,cAAc,IAAID,QAAQ,CAACE,iBAAiB,CAACD,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAed,QAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\nimport { connect } from 'react-redux';\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\nclass ShopPage extends React.Component {\r\n    unsuscribeFromSnapchot = null;\r\n\r\n    componentDidMount() {\r\n        const collectionRef = firestore.collection('collections');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            convertCollectionsSnapshotToMap(snapshot)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        return(\r\n        <div className='shop-page'>\r\n            <Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n            <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n        </div>);\r\n    };\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updatecollections(collectionsMap))\r\n});\r\n\r\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}